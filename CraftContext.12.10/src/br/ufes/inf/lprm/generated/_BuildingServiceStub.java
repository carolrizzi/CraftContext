package br.ufes.inf.lprm.generated;


/**
* br/ufes/inf/lprm/generated/_BuildingServiceStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from building.idl
* Sunday, October 21, 2012 10:12:54 PM BRST
*/


// --- SERVICES --- //
public class _BuildingServiceStub extends org.omg.CORBA.portable.ObjectImpl implements br.ufes.inf.lprm.generated.BuildingService
{

  public br.ufes.inf.lprm.generated.Building[] getExistingBuildings () throws br.ufes.inf.lprm.generated.BuildingException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getExistingBuildings", true);
                $in = _invoke ($out);
                br.ufes.inf.lprm.generated.Building $result[] = br.ufes.inf.lprm.generated.BuildingsHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:br/ufes/inf/lprm/generated/BuildingException:1.0"))
                    throw br.ufes.inf.lprm.generated.BuildingExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getExistingBuildings (        );
            } finally {
                _releaseReply ($in);
            }
  } // getExistingBuildings

  public br.ufes.inf.lprm.generated.Building getBuilding (String buildingName) throws br.ufes.inf.lprm.generated.BuildingNotFound
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getBuilding", true);
                $out.write_string (buildingName);
                $in = _invoke ($out);
                br.ufes.inf.lprm.generated.Building $result = br.ufes.inf.lprm.generated.BuildingHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:br/ufes/inf/lprm/generated/BuildingNotFound:1.0"))
                    throw br.ufes.inf.lprm.generated.BuildingNotFoundHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getBuilding (buildingName        );
            } finally {
                _releaseReply ($in);
            }
  } // getBuilding

  public br.ufes.inf.lprm.generated.Building[] getBuildingByType (String type) throws br.ufes.inf.lprm.generated.BuildingException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getBuildingByType", true);
                $out.write_string (type);
                $in = _invoke ($out);
                br.ufes.inf.lprm.generated.Building $result[] = br.ufes.inf.lprm.generated.BuildingsHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:br/ufes/inf/lprm/generated/BuildingException:1.0"))
                    throw br.ufes.inf.lprm.generated.BuildingExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getBuildingByType (type        );
            } finally {
                _releaseReply ($in);
            }
  } // getBuildingByType

  public void listBuildings (String playerName) throws br.ufes.inf.lprm.generated.BuildingException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("listBuildings", true);
                $out.write_string (playerName);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:br/ufes/inf/lprm/generated/BuildingException:1.0"))
                    throw br.ufes.inf.lprm.generated.BuildingExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                listBuildings (playerName        );
            } finally {
                _releaseReply ($in);
            }
  } // listBuildings

  public void addBuilding (String name, String type, String address, double height, double xWidth, double zWidth, double xCenter, double yCenter, double zCenter) throws br.ufes.inf.lprm.generated.BuildingException, br.ufes.inf.lprm.generated.BuildingAlreadyExists
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addBuilding", true);
                $out.write_string (name);
                $out.write_string (type);
                $out.write_string (address);
                $out.write_double (height);
                $out.write_double (xWidth);
                $out.write_double (zWidth);
                $out.write_double (xCenter);
                $out.write_double (yCenter);
                $out.write_double (zCenter);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:br/ufes/inf/lprm/generated/BuildingException:1.0"))
                    throw br.ufes.inf.lprm.generated.BuildingExceptionHelper.read ($in);
                else if (_id.equals ("IDL:br/ufes/inf/lprm/generated/BuildingAlreadyExists:1.0"))
                    throw br.ufes.inf.lprm.generated.BuildingAlreadyExistsHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                addBuilding (name, type, address, height, xWidth, zWidth, xCenter, yCenter, zCenter        );
            } finally {
                _releaseReply ($in);
            }
  } // addBuilding

  public void removeBuilding (String buildingName, boolean physicalDestruction) throws br.ufes.inf.lprm.generated.BuildingException, br.ufes.inf.lprm.generated.BuildingNotFound
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("removeBuilding", true);
                $out.write_string (buildingName);
                $out.write_boolean (physicalDestruction);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:br/ufes/inf/lprm/generated/BuildingException:1.0"))
                    throw br.ufes.inf.lprm.generated.BuildingExceptionHelper.read ($in);
                else if (_id.equals ("IDL:br/ufes/inf/lprm/generated/BuildingNotFound:1.0"))
                    throw br.ufes.inf.lprm.generated.BuildingNotFoundHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                removeBuilding (buildingName, physicalDestruction        );
            } finally {
                _releaseReply ($in);
            }
  } // removeBuilding

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:br/ufes/inf/lprm/generated/BuildingService:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _BuildingServiceStub
