package br.ufes.inf.lprm.generated;


/**
* br/ufes/inf/lprm/generated/PlayerServicePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from player.idl
* Monday, August 13, 2012 5:46:14 PM BRT
*/


// --- SERVICES --- //
public abstract class PlayerServicePOA extends org.omg.PortableServer.Servant
 implements br.ufes.inf.lprm.generated.PlayerServiceOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("getConnectedPlayers", new java.lang.Integer (0));
    _methods.put ("isPlayerConnected", new java.lang.Integer (1));
    _methods.put ("disconnectPlayer", new java.lang.Integer (2));
    _methods.put ("getPlayerPosition", new java.lang.Integer (3));
    _methods.put ("sendMessageToPlayer", new java.lang.Integer (4));
    _methods.put ("sendMessageToConnectedPlayers", new java.lang.Integer (5));
    _methods.put ("getPlayerFoodLevel", new java.lang.Integer (6));
    _methods.put ("setPlayerFoodLevel", new java.lang.Integer (7));
    _methods.put ("getPlayerHealth", new java.lang.Integer (8));
    _methods.put ("setPlayerHealth", new java.lang.Integer (9));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // br/ufes/inf/lprm/generated/PlayerService/getConnectedPlayers
       {
         try {
           String $result[] = null;
           $result = this.getConnectedPlayers ();
           out = $rh.createReply();
           br.ufes.inf.lprm.generated.stringsHelper.write (out, $result);
         } catch (br.ufes.inf.lprm.generated.PlayerException $ex) {
           out = $rh.createExceptionReply ();
           br.ufes.inf.lprm.generated.PlayerExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 1:  // br/ufes/inf/lprm/generated/PlayerService/isPlayerConnected
       {
         try {
           String player = in.read_string ();
           boolean $result = false;
           $result = this.isPlayerConnected (player);
           out = $rh.createReply();
           out.write_boolean ($result);
         } catch (br.ufes.inf.lprm.generated.PlayerException $ex) {
           out = $rh.createExceptionReply ();
           br.ufes.inf.lprm.generated.PlayerExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 2:  // br/ufes/inf/lprm/generated/PlayerService/disconnectPlayer
       {
         try {
           String player = in.read_string ();
           String message = in.read_string ();
           this.disconnectPlayer (player, message);
           out = $rh.createReply();
         } catch (br.ufes.inf.lprm.generated.PlayerNotFound $ex) {
           out = $rh.createExceptionReply ();
           br.ufes.inf.lprm.generated.PlayerNotFoundHelper.write (out, $ex);
         } catch (br.ufes.inf.lprm.generated.PlayerException $ex) {
           out = $rh.createExceptionReply ();
           br.ufes.inf.lprm.generated.PlayerExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 3:  // br/ufes/inf/lprm/generated/PlayerService/getPlayerPosition
       {
         try {
           String player = in.read_string ();
           br.ufes.inf.lprm.generated.Position $result = null;
           $result = this.getPlayerPosition (player);
           out = $rh.createReply();
           br.ufes.inf.lprm.generated.PositionHelper.write (out, $result);
         } catch (br.ufes.inf.lprm.generated.PlayerNotFound $ex) {
           out = $rh.createExceptionReply ();
           br.ufes.inf.lprm.generated.PlayerNotFoundHelper.write (out, $ex);
         } catch (br.ufes.inf.lprm.generated.PlayerException $ex) {
           out = $rh.createExceptionReply ();
           br.ufes.inf.lprm.generated.PlayerExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 4:  // br/ufes/inf/lprm/generated/PlayerService/sendMessageToPlayer
       {
         try {
           String player = in.read_string ();
           String message = in.read_string ();
           this.sendMessageToPlayer (player, message);
           out = $rh.createReply();
         } catch (br.ufes.inf.lprm.generated.PlayerNotFound $ex) {
           out = $rh.createExceptionReply ();
           br.ufes.inf.lprm.generated.PlayerNotFoundHelper.write (out, $ex);
         } catch (br.ufes.inf.lprm.generated.PlayerException $ex) {
           out = $rh.createExceptionReply ();
           br.ufes.inf.lprm.generated.PlayerExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 5:  // br/ufes/inf/lprm/generated/PlayerService/sendMessageToConnectedPlayers
       {
         try {
           String message = in.read_string ();
           this.sendMessageToConnectedPlayers (message);
           out = $rh.createReply();
         } catch (br.ufes.inf.lprm.generated.PlayerException $ex) {
           out = $rh.createExceptionReply ();
           br.ufes.inf.lprm.generated.PlayerExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 6:  // br/ufes/inf/lprm/generated/PlayerService/getPlayerFoodLevel
       {
         try {
           String player = in.read_string ();
           int $result = (int)0;
           $result = this.getPlayerFoodLevel (player);
           out = $rh.createReply();
           out.write_long ($result);
         } catch (br.ufes.inf.lprm.generated.PlayerNotFound $ex) {
           out = $rh.createExceptionReply ();
           br.ufes.inf.lprm.generated.PlayerNotFoundHelper.write (out, $ex);
         } catch (br.ufes.inf.lprm.generated.PlayerException $ex) {
           out = $rh.createExceptionReply ();
           br.ufes.inf.lprm.generated.PlayerExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 7:  // br/ufes/inf/lprm/generated/PlayerService/setPlayerFoodLevel
       {
         try {
           String player = in.read_string ();
           int level = in.read_long ();
           this.setPlayerFoodLevel (player, level);
           out = $rh.createReply();
         } catch (br.ufes.inf.lprm.generated.PlayerNotFound $ex) {
           out = $rh.createExceptionReply ();
           br.ufes.inf.lprm.generated.PlayerNotFoundHelper.write (out, $ex);
         } catch (br.ufes.inf.lprm.generated.PlayerException $ex) {
           out = $rh.createExceptionReply ();
           br.ufes.inf.lprm.generated.PlayerExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 8:  // br/ufes/inf/lprm/generated/PlayerService/getPlayerHealth
       {
         try {
           String player = in.read_string ();
           int $result = (int)0;
           $result = this.getPlayerHealth (player);
           out = $rh.createReply();
           out.write_long ($result);
         } catch (br.ufes.inf.lprm.generated.PlayerNotFound $ex) {
           out = $rh.createExceptionReply ();
           br.ufes.inf.lprm.generated.PlayerNotFoundHelper.write (out, $ex);
         } catch (br.ufes.inf.lprm.generated.PlayerException $ex) {
           out = $rh.createExceptionReply ();
           br.ufes.inf.lprm.generated.PlayerExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 9:  // br/ufes/inf/lprm/generated/PlayerService/setPlayerHealth
       {
         try {
           String player = in.read_string ();
           int health = in.read_long ();
           this.setPlayerHealth (player, health);
           out = $rh.createReply();
         } catch (br.ufes.inf.lprm.generated.PlayerNotFound $ex) {
           out = $rh.createExceptionReply ();
           br.ufes.inf.lprm.generated.PlayerNotFoundHelper.write (out, $ex);
         } catch (br.ufes.inf.lprm.generated.PlayerException $ex) {
           out = $rh.createExceptionReply ();
           br.ufes.inf.lprm.generated.PlayerExceptionHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:br/ufes/inf/lprm/generated/PlayerService:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public PlayerService _this() 
  {
    return PlayerServiceHelper.narrow(
    super._this_object());
  }

  public PlayerService _this(org.omg.CORBA.ORB orb) 
  {
    return PlayerServiceHelper.narrow(
    super._this_object(orb));
  }


} // class PlayerServicePOA
