#ifndef _BUILDING_IDL_
#define _BUILDING_IDL_

#include <common.idl>

module br {
module ufes {
module inf {
module lprm {
module generated {

	 // --- CONSTANTS --- //
    
    // --- ENUMERATIONS --- //
    enum BuildingEventType {EVT_PRESENCE};
    enum BuildingCommandType {CMD_LIST, CMD_ADD, CMD_REMOVE};
    
    // --- VALUETYPES --- //
    valuetype Building : Area {
        private string name;
        private string type;
        private double height;
        private string address;
        
        string getName();
        string getAddress();
        string getType();
        double getHeight();
    };
	
	// --- EXCEPTIONS --- //
	exception BuildingException {
		string msg;
	};
	
	exception BuildingNotFound {
		string name;
	};
	
	exception BuildingAlreadyExists{
		string name;
	};
        
	// --- TYPEDEFS --- //
	typedef sequence < Building > Buildings;
	
    // --- SERVICES --- //
    interface BuildingService {
        Buildings getExistingBuildings() raises (BuildingException);
        Building getBuilding(in string buildingName) raises (BuildingNotFound);
        Buildings getBuildingByType(in string type) raises (BuildingException);
        
        void listBuildings(in string playerName) raises (BuildingException);
        void addBuilding(in string name, in string type, in string address, in double height, in double xWidth, in double zWidth, in double xCenter, in double yCenter, in double zCenter) raises (BuildingException, BuildingAlreadyExists);
        void removeBuilding(in string buildingName, in boolean physicalDestruction) raises (BuildingException, BuildingNotFound);
    };
    
    // --- DATAS --- //
    
    // *** Event *** //
    interface BuildingEventDataWrapper {
        BuildingEventType getEventType();
        Object getEventData();
    };
    
    interface BuildingPresenceEventData {
        string getPlayerName();
        Building getBuilding();
    };
    
    // *** Command *** //
    interface BuildingCommandDataWrapper {
        BuildingCommandType getCommandType();
        Object getCommandData();
    };
    
    interface BuildingListCommandData {
        string getPlayerName();
    };
    
    interface BuildingAddCommandData {
        string getPlayerName();
        string getBuildingName();
        string getBuildingType();
        string getBuildingAddress();
        Area getArea();
        double getHeight();
    };
    
    interface BuildingRemoveCommandData {
        string getPlayerName();
        string getBuildingName();
        boolean physicalDestruction();
    };
    
};
};
};
};
};


#endif

  
