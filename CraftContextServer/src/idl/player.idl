#ifndef _PLAYER_IDL_
#define _PLAYER_IDL_

#include <common.idl>

module br {
module ufes {
module inf {
module lprm {
module generated {

    // --- CONSTANTS --- //
    const long MAX_FOOD_LEVEL = 20;
    const long MAX_HEALTH_LEVEL = 20;

    // --- ENUMERATIONS --- //
    enum PlayerEventType {EVT_EXP_CHANGE, EVT_JOIN, EVT_RESPAWN, EVT_LOGOUT, EVT_KICK, EVT_DEATH, EVT_MOVE, EVT_CHAT, EVT_REGAIN_HEALTH, EVT_DAMAGE, EVT_STARVATION_LEVEL};
    enum PlayerCommandType {CMD_FOOD_LEVEL, CMD_HEALTH};
	
	// --- EXCEPTIONS --- //
	exception PlayerException {
        string msg;
    };
    
	exception PlayerNotFound {
        string name;
    };
    
    // --- SERVICES --- //
    interface PlayerService {
        strings getConnectedPlayers() raises (PlayerException);
        boolean isPlayerConnected(in string player) raises (PlayerException);
        void disconnectPlayer(in string player, in string message) raises (PlayerNotFound, PlayerException);
        
        Position getPlayerPosition(in string player) raises (PlayerNotFound, PlayerException);
        
        void sendMessageToPlayer(in string player, in string message) raises (PlayerNotFound, PlayerException);
        void sendMessageToConnectedPlayers(in string message) raises (PlayerException);
        
        long getPlayerFoodLevel(in string player) raises (PlayerNotFound, PlayerException);
        void setPlayerFoodLevel(in string player, in long level) raises (PlayerNotFound, PlayerException);
        
        long getPlayerHealth(in string player) raises (PlayerNotFound, PlayerException);
        void setPlayerHealth(in string player, in long health) raises (PlayerNotFound, PlayerException);
    };
    
    // --- DATAS --- //
    
    // *** Player Event *** //
    interface PlayerEventDataWrapper {
        PlayerEventType getEventType();
        Object getEventData();
    };
    
    interface PlayerMoveEventData {
        string getPlayerName();
        Position getPosition();
    };
    
    interface PlayerJoinEventData {
        string getPlayerName();
        Position getPosition();
    };
    
    interface PlayerLogoutEventData {
        string getPlayerName();
        Position getPosition();
    };
    
    interface PlayerKickEventData {
        string getPlayerName();
        Position getPosition();
    };
    
    interface PlayerRespawnEventData {
        string getPlayerName();
        Position getPosition();
    };
    
    interface PlayerChatEventData{
        string getPlayerName();
        string getMessage();
    };
    
    interface PlayerFoodLevelEventData{
        string getPlayerName();
        Position getPosition();
        long getFoodLevel();
    };
    
    interface PlayerDeathEventData{
        string getPlayerName();
        Position getPosition();
        string getDeathMessage();
        long getDroppedExp();
    };
    
    interface PlayerRegainHeathEventData{
        string getPlayerName();
        Position getPosition();
        RegainHealthReason getRegainReason();
        long getAmount();
    };
    
    interface PlayerDamageEventData{
        string getPlayerName();
        Position getPosition();
        DamageCause getCause();
        long getDamage();
    };
    
    // *** Player Command *** //
    interface PlayerCommandDataWrapper {
        PlayerCommandType getCommandType();
        Object getCommandData();
    };
    
    interface PlayerFoodLevelCommandData {
        string getPlayerName();
        long getFoodLevel();
    };
    
    interface PlayerDamageCommandData {
        string getPlayerName();
        long getDamage();
    };
    
};
};
};
};
};


#endif

  
